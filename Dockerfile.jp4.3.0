FROM nvcr.io/nvidia/l4t-base:r32.3.1

RUN sed -i "s/archive.ubuntu.com/bg.archive.ubuntu.com/" /etc/apt/sources.list
RUN \   
        apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
                libtinyxml2-6 \
                libtinyxml2-dev \
                libgstreamer1.0-0 \
                libgstreamer1.0-dev \
                libeigen3-dev \
                libc-bin \
                python3-dev \
                python3-pip \
                openjdk-8-jdk-headless \
                curl \
                wget \
                python \
                unzip \
                bash-completion \
                joe less \
                libhdf5-dev \
                python3-ncclient libvncclient1 \
        && apt-get clean \
        && rm -rf /var/lib/apt/lists/*

RUN mkdir /work
WORKDIR /work

RUN wget -qO - https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub | sudo apt-key add 

ADD jetpack4.3/*.deb ./
RUN \
    dpkg -i libcudnn7*.deb && \
    dpkg -i cuda-repo-l4t-10-0-local-10.0.326_1.0-1_arm64.deb && \
    apt update && \
    apt install -y cuda-command-line-tools-10-0 \
       cuda-compiler-10-0 \
       cuda-core-10-0 \
       cuda-cublas-10-0 \
       cuda-cublas-dev-10-0 \
       cuda-cudart-10-0 \
       cuda-cudart-dev-10-0 \
       cuda-cufft-10-0 \
       cuda-cufft-dev-10-0 \
       cuda-cuobjdump-10-0 \
       cuda-cupti-10-0 \
       cuda-curand-10-0 \
       cuda-curand-dev-10-0 \
       cuda-cusolver-10-0 \
       cuda-cusolver-dev-10-0 \
       cuda-cusparse-10-0 \
       cuda-cusparse-dev-10-0 \
       cuda-driver-dev-10-0 \
       cuda-gpu-library-advisor-10-0 \
       cuda-libraries-10-0 \
       cuda-libraries-dev-10-0 \
       cuda-license-10-0 \
       cuda-memcheck-10-0 \
       cuda-minimal-build-10-0 \
       cuda-misc-headers-10-0 \
       cuda-npp-10-0 \
       cuda-npp-dev-10-0 \
       cuda-nvgraph-10-0 \
       cuda-nvgraph-dev-10-0 \
       cuda-nvml-dev-10-0 \
       cuda-nvprof-10-0 \
       cuda-nvprune-10-0 \
       cuda-nvrtc-10-0 \
       cuda-nvrtc-dev-10-0 \
       cuda-nvtx-10-0 \
       cuda-toolkit-10-0 \
       cuda-tools-10-0 \
     && apt-get clean \
     && rm -rf /var/lib/apt/lists/*

RUN  apt update && \
    apt install -y libtbb-dev libtbb2 libgtk2.0-0 && apt-get clean \
     && rm -rf /var/lib/apt/lists/*

RUN \
     dpkg -i lib*parsers*.deb libnvinfer*.deb \
     && dpkg -i tensorrt*.deb \
     && dpkg -i python3-*.deb OpenCV*.deb

# The following addition to LD path is needed or the bazel build will break with errors due to undefined references
# See https://github.com/tensorflow/tensorflow/issues/13243
# If you don't want to do this, thenn just build with `bazel build --config=opt --config=monolithic //tensorflow:libtensorflow_cc.so`
# In case of monolithic build there is only one build artefact - libtensorflow_cc.so and there is no libtensorflow_framework.so
RUN echo "/usr/local/cuda/targets/x86_64-linux/lib/stubs" >> /etc/ld.so.conf.d/cuda-10-0.conf && ldconfig

RUN pip3 install --upgrade pip
RUN pip3 install setuptools>=41
RUN pip3 install wheel
RUN pip3 install numpy
RUN pip3 install pandas
RUN pip3 install virtualenv
